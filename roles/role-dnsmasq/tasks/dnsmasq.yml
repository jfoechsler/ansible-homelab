---
- include_tasks: get-leases.yml
  vars:
    reservations: lan_hosts
    ip_start: "{{ lan_ip_start }}"
    ip_end: "{{ lan_ip_end }}"
  when: router_features_merged.dhcpd.enabled

- include_tasks: get-leases.yml
  vars:
    reservations: wlan_hosts
    ip_start: "{{ wlan_ip_start }}"
    ip_end: "{{ wlan_ip_end }}"
  when:
    - wlan_nic is defined
    - router_features_merged.dhcpd.enabled

- name: dnsmasq main conf
  template:
    src: dnsmasq.conf.j2
    dest: /etc/dnsmasq.conf
  register: dnsmasq_conf

- name: dnsmasq dhcpd conf
  template:
    src: dnsmasq.dhcpd.conf.j2
    dest: /etc/dnsmasq.d/dhcpd.conf
  register: dnsmasq_dhcpd_conf
  when: router_features_merged.dhcpd.enabled

- name: dnsmasq dhcpd disabled conf
  template:
    src: dnsmasq.dhcpd-disabled.conf.j2
    dest: /etc/dnsmasq.d/dhcpd.conf
  register: dnsmasq_dhcpd_disabled_conf
  when: not router_features_merged.dhcpd.enabled

- name: unit override directory
  file:
    path: /etc/systemd/system/dnsmasq.service.d
    state: directory

- name: unit override conf
  template:
    src: unit-override.conf.j2
    dest: /etc/systemd/system/dnsmasq.service.d/unit-override.conf
  register: unit_conf

- name: dnsmasq service state needed
  set_fact:
    dnsmasq_state_needed: restarted
  when:
    - dnsmasq_enabled == 'yes'
    - dnsmasq_conf.changed
      or dnsmasq_dhcpd_conf.changed
      or dnsmasq_dhcpd_disabled_conf.changed
      or hosts_conf.changed
      or unit_conf.changed

- name: dnsmasq service
  systemd:
    name: "dnsmasq"
    state: "{{ dnsmasq_state_needed }}"
    enabled: "{{ dnsmasq_enabled }}"
    daemon_reload: "yes"

- name: dispatcher
  template:
    src: dnsmasq-dispatcher.sh.j2
    dest: /etc/NetworkManager/dispatcher.d/dnsmasq-dispatcher.sh
    owner: root
    group: root
    mode: "0700"
