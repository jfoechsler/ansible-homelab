- name: VMFS directories
  file:
    path: "{{ vmfs_path }}/{{ item }}"
    state: directory
  with_items: "{{ vmfs }}"

- name: mount vmfs volume
  mount:
    name: "{{ vmfs_path }}/{{ item }}"
    src: "{{ item }}"
    state: mounted
    fstype: "virtiofs"
    opts: 'defaults'
  with_items: "{{ vmfs }}"

- name: Generate volumes list
  set_fact:
    volumes_list: "{{ volumes_list | combine({item.0.name: volumes_list[item.0.name] | default([]) + [mount_path + ':' + item.1.path + ':z'] }) }}"
  loop: "{{ ctr_dict | subelements('volumes', skip_missing=True) }}"
  vars:
    mount_path: "{{ [vmfs_path, item.1.name, item.1.subdir|default('')] | join('/') }}"
  when:
    - item.1.type == "vmfs"
    - item.1.name is in vmfs

- name: container VMFS directories
  file:
    path: "{{ mount_path }}"
    owner: "{{ item.0.user if item.0.user is defined else omit }}"
    state: directory
  loop: "{{ ctr_dict | subelements('volumes', skip_missing=True) }}"
  vars:
    mount_path: "{{ [vmfs_path, item.1.name, item.1.subdir|default('')] | join('/') }}"
  when:
    - item.1.type == "vmfs"
    - item.1.name is in vmfs
