- set_fact:
    vm_template: "vm-template{{ (vm.value.spec.vm_type|default('') == 'efi') | ternary('-efi', '') }}.xml.j2"

- name: Save XML definition
  template:
    src: "{{ vm_template }}"
    dest: "{{ vm_data_path }}/vmhost/{{ vm.key }}/dom.xml"
  register: saved_xml

# if xml changed destroy undefine, define. Unless creating new VM
- name: Destroy VM for update
  virt:
    name: "{{ vm.key }}"
    state: "shutdown"
  when:
    - saved_xml.changed
    - vm.key in registered_vms.list_vms

# undefine vm
- name: Undefine VM for update
  virt:
    command: undefine
    name: "{{ vm.key }}"
    flags:
      - nvram
  register: updated_undefined
  when:
    - saved_xml.changed
    - vm.key in registered_vms.list_vms

- name: List VMs until VM removed
  virt:
    command: list_vms
  register: updated_vm_list
  when: updated_undefined.undefine is defined
  until: vm.key not in updated_vm_list.list_vms
  retries: 50
  delay: 2

- name: Define a VM for update or creation
  virt:
    command: define
    xml: "{{ lookup('template', vm_template ) }}"
  when:
    - saved_xml.changed
      or vm.key in create_vms | map(attribute='name')

- set_fact:
    updated_vms: "{{ updated_vms | default([]) }}"
- name: Register updated or created VM
  set_fact:
    updated_vms: "{{ updated_vms + [vm.value.spec] }}"
  when:
    - saved_xml.changed
      or vm.key in create_vms | map(attribute='name')
