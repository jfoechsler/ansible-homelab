- file:
    path: "{{ vm_data_path }}/vmfs/{{ item.key }}"
    state: directory
  with_dict: "{{ vmfs_shares }}"
  when: item.value.host == inventory_hostname

# Currently filesystem xml done in vm template. Could be done as attach device approach
#get-vmfs.yml contents:
#  - set_fact:
#      vmfs_current: "{{ vmfs_current + [{'vm': vm.key, 'source': item.source['@dir'], 'target': item.target['@dir']}] }}"
#    with_items:
#      - "{{ vars['dom_dict_' + vm.key | replace('-', '_')].domain.devices.filesystem }}"
#    when: item.source['@dir'] is defined
#

#- include_tasks: get-vmfs.yml
#  with_dict:
#    - "{{ vm_inventory }}"
#  loop_control:
#    loop_var: vm

#- name: Generate VMFS XML definition
#  template:
#    src: "virtiofs.xml.j2"
#    dest: "{{ vm_data_path }}/vmhost/vmfs.xml"

#- set_fact:
#    vmfs_desired: "{{ vmfs_desired + [{'vm': vm.key, 'source': vm_data_path + '/vmfs', 'target': 'vmfs' }] }}"
#  with_dict: "{{ vm_inventory }}"
#  loop_control:
#    loop_var: vm
#  when: vm.value.spec.state == "running"
#
#- debug:
#    msg: "{{vmfs_desired}}"
#
#- debug:
#    msg: "{{vmfs_current}}"
#
#- name: Attach vmfs
#  command: /usr/bin/virsh attach-device --persistent {{ item.vm }} {{ vm_data_path }}/vmhost/vmfs.xml
#  with_items: "{{ vmfs_desired|difference(vmfs_current) }}"
