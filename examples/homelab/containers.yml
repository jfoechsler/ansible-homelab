# Create VM inventory
- hosts: vm_hosts
  become: True
  tasks:
    - include_role:
        name: role-virt-host
        tasks_from: inventory

- hosts: "{{ 'container_hosts_' + stage if stage is defined else 'container_hosts' }}"
  become: True
  gather_facts: no
  pre_tasks:
    # VM restart for VMFS
    - name: wait for server to come online
      become: false
      wait_for_connection:
        timeout: 300
    - name: Gathering facts
      setup:
  roles:
    - role-container-host

- hosts: routers
  become: True
  tasks:
    - set_fact:
        dnsmasq_container_hosts: "{{ dnsmasq_container_hosts | default([]) + 
            [{ 'env': item, 'hosts': groups['container_hosts_' + item] }] }}"
      loop: "{{ ['production', 'testing', 'staging'] }}"

    - set_fact:
        dnsmasq_containers_conf: {}
    - set_fact:
        dnsmasq_containers_conf: "{{ dnsmasq_containers_conf | combine({ item.0.env: dnsmasq_containers_conf[item.0.env] | 
            default('') + hostvars[item.1].dnsmasq_conf | default('') }) }}"
      loop: "{{ dnsmasq_container_hosts | subelements('hosts') }}"

    - name: dnsmasq container directives
      copy:
        content: "{{ item.value }}"
        dest: /etc/dnsmasq.d/containers_{{ item.key }}.conf
      loop: "{{ dnsmasq_containers_conf | dict2items }}"
      notify: dnsmasq restart
      when:
        - stage is not defined or item.key == stage
  handlers:
    - import_tasks: handlers/main.yml
